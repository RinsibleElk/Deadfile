<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <LinearGradientBrush x:Key="BrowserBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#33FFFFFF" Offset="0"/>
        <GradientStop Color="#33000000" Offset="0.992"/>
        <GradientStop Color="#33000000" Offset="0.085"/>
    </LinearGradientBrush>

    <Style x:Key="TreeViewTransparentBackground" TargetType="TreeView">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Border" CornerRadius="1" BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Transparent" />
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>
                        <ScrollViewer Focusable="False" CanContentScroll="False" Padding="4">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QuotationPhrase" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    </Style>

    <Style x:Key="QuotationAuthor" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="DarkBlue"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="BrowserBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <ImageBrush x:Key="HomeButtonImageBrush" ImageSource="../Resources/home.png" Stretch="Uniform"/>
    <ImageBrush x:Key="HomeGreyButtonImageBrush" ImageSource="../Resources/home-grey.png" Stretch="Uniform"/>
    <ImageBrush x:Key="HomePurpleButtonImageBrush" ImageSource="../Resources/home-purple.png" Stretch="Uniform"/>

    <Style x:Key="HomeButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource HomeButtonImageBrush}"/>
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HomePurpleButtonImageBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource HomeGreyButtonImageBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="BackButtonImageBrush" ImageSource="../Resources/back.png" Stretch="Uniform"/>
    <ImageBrush x:Key="BackGreyButtonImageBrush" ImageSource="../Resources/back-grey.png" Stretch="Uniform"/>
    <ImageBrush x:Key="BackPurpleButtonImageBrush" ImageSource="../Resources/back-purple.png" Stretch="Uniform"/>

    <Style x:Key="BackButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource BackButtonImageBrush}"/>
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackPurpleButtonImageBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource BackGreyButtonImageBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="ForwardButtonImageBrush" ImageSource="../Resources/forward.png" Stretch="Uniform"/>
    <ImageBrush x:Key="ForwardGreyButtonImageBrush" ImageSource="../Resources/forward-grey.png" Stretch="Uniform"/>
    <ImageBrush x:Key="ForwardPurpleButtonImageBrush" ImageSource="../Resources/forward-purple.png" Stretch="Uniform"/>

    <Style x:Key="ForwardButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ForwardButtonImageBrush}"/>
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ForwardPurpleButtonImageBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource ForwardGreyButtonImageBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="UndoButtonImageBrush" ImageSource="../Resources/undo.png" Stretch="Uniform"/>
    <ImageBrush x:Key="UndoGreyButtonImageBrush" ImageSource="../Resources/undo-grey.png" Stretch="Uniform"/>
    <ImageBrush x:Key="UndoPurpleButtonImageBrush" ImageSource="../Resources/undo-purple.png" Stretch="Uniform"/>

    <Style x:Key="UndoButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource UndoButtonImageBrush}"/>
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource UndoPurpleButtonImageBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource UndoGreyButtonImageBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="RedoButtonImageBrush" ImageSource="../Resources/redo.png" Stretch="Uniform"/>
    <ImageBrush x:Key="RedoGreyButtonImageBrush" ImageSource="../Resources/redo-grey.png" Stretch="Uniform"/>
    <ImageBrush x:Key="RedoPurpleButtonImageBrush" ImageSource="../Resources/redo-purple.png" Stretch="Uniform"/>

    <Style x:Key="RedoButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource RedoButtonImageBrush}"/>
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RedoPurpleButtonImageBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource RedoGreyButtonImageBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="AddButtonImageBrush" ImageSource="../Resources/add.png" Stretch="Uniform"/>
    <ImageBrush x:Key="AddGreyButtonImageBrush" ImageSource="../Resources/add-grey.png" Stretch="Uniform"/>
    <ImageBrush x:Key="AddPurpleButtonImageBrush" ImageSource="../Resources/add-purple.png" Stretch="Uniform"/>

    <Style x:Key="AddButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource AddButtonImageBrush}"/>
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AddPurpleButtonImageBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource AddGreyButtonImageBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="SaveButtonImageBrush" ImageSource="../Resources/save.png" Stretch="Uniform"/>
    <ImageBrush x:Key="SaveGreyButtonImageBrush" ImageSource="../Resources/save-grey.png" Stretch="Uniform"/>
    <ImageBrush x:Key="SavePurpleButtonImageBrush" ImageSource="../Resources/save-purple.png" Stretch="Uniform"/>

    <Style x:Key="SaveButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SaveButtonImageBrush}"/>
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SavePurpleButtonImageBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource SaveGreyButtonImageBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="EditButtonImageBrush" ImageSource="../Resources/edit.png" Stretch="Uniform"/>
    <ImageBrush x:Key="EditGreyButtonImageBrush" ImageSource="../Resources/edit-grey.png" Stretch="Uniform"/>
    <ImageBrush x:Key="EditPurpleButtonImageBrush" ImageSource="../Resources/edit-purple.png" Stretch="Uniform"/>

    <Style x:Key="EditButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource EditButtonImageBrush}"/>
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource EditPurpleButtonImageBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource EditGreyButtonImageBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="DeleteButtonImageBrush" ImageSource="../Resources/delete.png" Stretch="Uniform"/>
    <ImageBrush x:Key="DeleteGreyButtonImageBrush" ImageSource="../Resources/delete-grey.png" Stretch="Uniform"/>
    <ImageBrush x:Key="DeletePurpleButtonImageBrush" ImageSource="../Resources/delete-purple.png" Stretch="Uniform"/>

    <Style x:Key="DeleteButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource DeleteButtonImageBrush}"/>
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DeletePurpleButtonImageBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DeleteGreyButtonImageBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>