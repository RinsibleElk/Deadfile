<UserControl
    x:Class="Deadfile.Tab.JobChildren.JobTasks.JobTasksJobChildView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:designTime="clr-namespace:Deadfile.Infrastructure.DesignTime;assembly=Deadfile.Infrastructure"
    xmlns:dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:entity="clr-namespace:Deadfile.Entity;assembly=Deadfile.Entity"
    xmlns:local="clr-namespace:Deadfile.Tab.JobChildren.JobTasks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:Deadfile.Model;assembly=Deadfile.Model"
    xmlns:templates="clr-namespace:Deadfile.Infrastructure.Templates;assembly=Deadfile.Infrastructure"
    d:DataContext="{d:DesignInstance Type=local:JobTasksJobChildDesignTimeViewModel,
                                     IsDesignTimeCreatable=True}"
    d:DesignHeight="300"
    d:DesignWidth="300"
    dialog:DialogParticipation.Register="{Binding}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <designTime:DesignTimeResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Deadfile.Infrastructure;component/Styles/Converters.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Deadfile.Infrastructure;component/Styles/Styles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Deadfile.Infrastructure;component/Styles/Themables.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Red.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </designTime:DesignTimeResourceDictionary>
    </UserControl.Resources>
    <DockPanel LastChildFill="True">
        <DockPanel.Resources>
            <Style TargetType="{x:Type DatePickerTextBox}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBox x:Name="PART_TextBox" Text="{Binding Path=SelectedDate, StringFormat='dd/MM/yyyy', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate x:Key="ExpanderHeaderTemplate" DataType="model:JobTaskModel">
                <DataTemplate.Resources>
                    <Style x:Key="PriorityImage" TargetType="{x:Type Image}">
                        <Setter Property="Source" Value="pack://application:,,,/Deadfile.Infrastructure;component/Resources/medium-priority.png" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Priority}" Value="{x:Static entity:JobTaskPriority.Low}">
                                <Setter Property="Source" Value="pack://application:,,,/Deadfile.Infrastructure;component/Resources/low-priority.png" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Priority}" Value="{x:Static entity:JobTaskPriority.Medium}">
                                <Setter Property="Source" Value="pack://application:,,,/Deadfile.Infrastructure;component/Resources/medium-priority.png" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Priority}" Value="{x:Static entity:JobTaskPriority.High}">
                                <Setter Property="Source" Value="pack://application:,,,/Deadfile.Infrastructure;component/Resources/high-priority.png" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataTemplate.Resources>
                <Border Height="24">
                    <StackPanel Orientation="Horizontal">
                        <Image
                            Width="16"
                            Height="16"
                            Margin="0,0,5,0"
                            Style="{StaticResource PriorityImage}" />
                        <TextBlock VerticalAlignment="Center" Text="{Binding HeaderText}" />
                    </StackPanel>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="ExpanderHeaderTemplateAddNew" DataType="model:JobTaskModel">
                <Border Height="24">
                    <TextBlock
                        Margin="4,0"
                        VerticalAlignment="Center"
                        FontSize="11"
                        FontWeight="Normal"
                        Text="Add New..."
                        TextWrapping="Wrap" />
                </Border>
            </DataTemplate>
            <templates:ModelTemplateSelector
                x:Key="ExpanderHeaderTemplateSelector"
                AddNewTemplate="{StaticResource ExpanderHeaderTemplateAddNew}"
                ExistingTemplate="{StaticResource ExpanderHeaderTemplate}" />
        </DockPanel.Resources>
        <TextBox
            controls:TextBoxHelper.Watermark="Filter"
            DockPanel.Dock="Top"
            Text="{Binding Filter, Mode=TwoWay, Delay=500, UpdateSourceTrigger=PropertyChanged}" />
        <ListBox
            ItemsSource="{Binding Items}"
            SelectedIndex="{Binding SelectedIndex}"
            SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
            SelectionMode="Single">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border BorderBrush="Black" BorderThickness="0,0,0,1">
                        <Expander
                            Header="{Binding}"
                            HeaderTemplateSelector="{StaticResource ExpanderHeaderTemplateSelector}"
                            IsExpanded="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsSelected}"
                            Style="{StaticResource GradientExpanderStyle}">
                            <Grid Background="White">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <TextBox
                                    Grid.Row="0"
                                    controls:TextBoxHelper.Watermark="Description"
                                    IsEnabled="{Binding Path=DataContext.Editable, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    Text="{Binding Description, Mode=TwoWay, Delay=500, UpdateSourceTrigger=PropertyChanged}" />
                                <DockPanel Grid.Row="1" LastChildFill="True">
                                    <DockPanel.Resources>
                                        <Style x:Key="PriorityToggle" TargetType="{x:Type Image}">
                                            <Setter Property="Source" Value="pack://application:,,,/Deadfile.Infrastructure;component/Resources/medium-priority.png" />
                                            <Setter Property="ToolTip" Value="Toggle Priority (Medium)" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Priority}" Value="{x:Static entity:JobTaskPriority.Low}">
                                                    <Setter Property="Source" Value="pack://application:,,,/Deadfile.Infrastructure;component/Resources/low-priority.png" />
                                                    <Setter Property="ToolTip" Value="Toggle Priority (Low)" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Priority}" Value="{x:Static entity:JobTaskPriority.Medium}">
                                                    <Setter Property="Source" Value="pack://application:,,,/Deadfile.Infrastructure;component/Resources/medium-priority.png" />
                                                    <Setter Property="ToolTip" Value="Toggle Priority (Medium)" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Priority}" Value="{x:Static entity:JobTaskPriority.High}">
                                                    <Setter Property="Source" Value="pack://application:,,,/Deadfile.Infrastructure;component/Resources/high-priority.png" />
                                                    <Setter Property="ToolTip" Value="Toggle Priority (High)" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DockPanel.Resources>
                                    <Button Command="{Binding Path=DataContext.TogglePriorityCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" IsEnabled="{Binding Path=DataContext.Editable, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                        <Image
                                            Width="16"
                                            Height="16"
                                            DockPanel.Dock="Right"
                                            Style="{StaticResource PriorityToggle}" />
                                    </Button>
                                    <CheckBox
                                        Margin="10,0,10,0"
                                        DockPanel.Dock="Right"
                                        IsChecked="{Binding State, Mode=TwoWay, Converter={StaticResource JobTaskStateToBoolean}}"
                                        IsEnabled="{Binding Path=DataContext.Editable, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                        Completed
                                    </CheckBox>
                                    <DatePicker
                                        IsEnabled="{Binding Path=DataContext.Editable, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        IsTodayHighlighted="True"
                                        SelectedDate="{Binding DueDate}" />
                                </DockPanel>
                                <TextBox
                                    Grid.Row="2"
                                    controls:TextBoxHelper.Watermark="Notes"
                                    IsEnabled="{Binding Path=DataContext.Editable, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    Text="{Binding Notes, Mode=TwoWay, Delay=500, UpdateSourceTrigger=PropertyChanged}" />
                                <ComboBox
                                    Grid.Row="3"
                                    IsEditable="False"
                                    IsEnabled="{Binding Path=DataContext.Editable, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    ItemsSource="{Binding Source={StaticResource JobTaskStateValues}}"
                                    SelectedItem="{Binding State}" />
                                <StackPanel
                                    Grid.Row="4"
                                    HorizontalAlignment="Right"
                                    Orientation="Horizontal">
                                    <Button Command="{Binding Path=DataContext.EditCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" Visibility="{Binding Path=DataContext.Editable, Converter={StaticResource InverseBooleanToVisibility}, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                        <TextBlock Text="{Binding Path=DataContext.SelectedItem.Id, Converter={StaticResource ModelIdToEditCommandName}, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                                    </Button>
                                    <Button Command="{Binding Path=DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" Visibility="{Binding Path=DataContext.CanDeleteItem, Converter={StaticResource BooleanToVisibility}, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                        Delete
                                    </Button>
                                    <Button Command="{Binding Path=DataContext.DiscardCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" Visibility="{Binding Path=DataContext.Editable, Converter={StaticResource BooleanToVisibility}, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                        Discard
                                    </Button>
                                    <Button
                                        Command="{Binding Path=DataContext.SaveCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        IsEnabled="{Binding Path=HasErrors, Converter={StaticResource InverseBoolean}}"
                                        Visibility="{Binding Path=DataContext.Editable, Converter={StaticResource BooleanToVisibility}, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                        Save
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Expander>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </DockPanel>
</UserControl>
